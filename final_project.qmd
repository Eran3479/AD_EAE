---
title: "Final_project"
format:
  revealjs:
    smaller: true
    scrollable: true
    transition: slide
    transition-speed: slow
editor: visual
number-sections: true
toc: true
slide-number: true
incremental: true
---

# Intro

**text here**

# Literature review

## Determining Factors in MOOCs Completion Rates: Application Test in Energy Sustainability Courses

**Introduction:**This study explores factors affecting Massive Open Online Course (MOOC) completion rates, specifically in energy sustainability courses. It examines how personal, family, social, labor, and instructional design factors influence engagement and course completion.

**Methods:** Data from 8,737 participants in 12 MOOCs (2017-2018) were analyzed. Surveys assessed participantsâ€™ motivations, backgrounds, and interactions to identify key factors influencing enrollment and completion.

**Results:** Personal, family, social, labor, and instructional design factors significantly impact MOOC engagement and completion. "Professional development" was most influential, particularly for technical graduates. Effective instructional design, including interactive elements and course relevance, was vital for younger participants, while traditional xMOOC design correlated with lower completion rates.

**Conclusions:** Improving MOOC completion rates hinges on effective instructional design, strong personal motivation, and professional relevance. These insights are essential for educators and course designers seeking to boost MOOC effectiveness and engagement.

## Massive Open Online Course Completion Rates Revisited: Assessment, Length and Attrition

**Introduction:** This study updates Jordan's 2014 work by analyzing enrollment and completion data from 221 MOOCs to identify factors affecting completion rates amidst changing enrollment trends.

**Methods:** The analysis uses multiple regression to evaluate how course length, start date, and assessment type impact completion rates, with data showing rates from 0.7% to 52.1%.

**Results:** Longer courses and those using peer grading are associated with lower completion rates. Course length and early engagement are significant factors, while university ranking and total enrollment are not.

**Conclusions:** Course length and assessment type significantly affect MOOC completion rates. Further research is needed due to data limitations and evolving trends.

**text here**

# Hypothesis

**text here**

# Methods

**In this project, we undertook a thorough analysis by first cleaning the data to ensure accuracy. We then performed correlation tests to identify relationships between variables, and checked for normal distribution using the Shapiro-Wilk test. Our analysis included running ANOVA to compare group means and using the Friedman test as a non-parametric alternative. We also calculated various means to summarize the data and created graphs to visualize the connections between different variables. This approach allowed us to gain a clear understanding of the relationships within the data.**


## Loading the necessary libraries

```{r, echo=TRUE, results='hide'}
library(dplyr)
library(tidyr)
library(tidyverse)
library(reshape2)
library(MASS)
```

```{r, echo=TRUE, results='hide'}
# Reading the file into R
data = read.csv("data.csv")
```

```{r, echo=TRUE, results='hide'}
# Convert to tibble
data = as_tibble(data)
```

## Inspecting and cleaning the data

```{r, echo=TRUE, results='hide'}
# Insepecting the data
summary(data)
```

```{r, echo=TRUE, results='hide'}
#Check for NA's
sapply(data, function(x) sum(is.na(x)))
# NO NA's
```

```{r, echo=TRUE, results='hide'}
# Remove UserID column
data =dplyr::select(data, -UserID)
```

```{r, echo=TRUE, results='hide'}
# Check for duplicates
duplicates = data[duplicated(data), ]
duplicates 
# We can see that there are 877 rows of duplicates
```

```{r, echo=TRUE, results='hide'}
#Removing duplicates
data = data |>
  distinct()
```

```{r, echo=TRUE, results='hide'}
#Check to see if the duplicates were removed, should equal to 0
sum(duplicated(data)) # 0 
```

```{r, echo=TRUE, results='hide'}
# count how many students from each category
category = data |>
  group_by(CourseCategory) |>
  summarise(Count = n())
category
```

## sampling 1500 from each category and normalzing the data

```{r, echo=TRUE, results='hide'}
set.seed(123)

data <- data %>%
  group_by(CourseCategory) %>%
  sample_n(size = 1500, replace = TRUE) %>%
  ungroup()


normalize <- function(x) {
  return ((x - min(x)) / (max(x) - min(x)))
}

data = data |>
  mutate(TimeSpentOnCourse = normalize(TimeSpentOnCourse),
         NumberOfVideosWatched = normalize(NumberOfVideosWatched),
         NumberOfQuizzesTaken = normalize(NumberOfQuizzesTaken),
         QuizScores = normalize(QuizScores),
         CompletionRate = normalize(CompletionRate))

data <- data %>%
  mutate(across(where(is.numeric) & !all_of(c("DeviceType")), round, 3))
data
```

## shapiro test **testing to see if the data is normally distributing**

## anova

## fridman

## correlation

## Mean by category

```{r, echo=TRUE, results='hide'}
data_health = data|>
  filter(CourseCategory == 'Health')

data_arts = data |>
  filter(CourseCategory == 'Arts')

data_science <- data %>%
  filter(CourseCategory== 'Science')

data_Programming <- data %>%
  filter(CourseCategory == 'Programming')

data_business <- data %>%
  filter(CourseCategory == 'Business')


calculate_mean_completion <- function(data) {
  mean_completion <- sum(data$CourseCompletion == 1) / 1500
  return(mean_completion)
}

# Calculate mean completion rates for each category
mean_completion_health <- calculate_mean_completion(data_health)
mean_completion_science <- calculate_mean_completion(data_science)
mean_completion_Programming <- calculate_mean_completion(data_Programming)
mean_completion_arts <- calculate_mean_completion(data_arts)
mean_completion_business <- calculate_mean_completion(data_business)

# Create a table with the results
completion_rates <- tibble(
  course = c("Health", "Science", "Programming", "Arts", "Business"),
  completion_rate = c(mean_completion_health, mean_completion_science, mean_completion_Programming, mean_completion_arts, mean_completion_business)
)


completion_rates_per = completion_rates %>%
  mutate(completion_rate = completion_rate * 100)

# Create the bar chart
ggplot(completion_rates_per, aes(x = course, y = completion_rate, fill = course)) +
  geom_bar(stat = 'identity') +
  geom_text(aes(label = round(completion_rate, 1)), vjust = -0.5, size = 3.5) +
  scale_y_continuous(labels = scales::percent_format(scale = 1), limits = c(0, 100)) +
  labs(title = "Mean of Course Completion by Category",
       x = "Course Category",
       y = "completion of course (pass/not pass) (%)") +
  theme_minimal() +
  theme(legend.position = "none")
```

## mean by variables

```{r, echo=TRUE, results='hide'}
mean_data <- data %>%
  dplyr:: select (-DeviceType, -CourseCompletion) %>%
  group_by(CourseCategory) %>%
  summarise(across(everything(), mean, na.rm = TRUE))

mean_data
# Pivot data for easier plotting
mean_data_long <- mean_data %>%
  pivot_longer(-CourseCategory, names_to = "Variable", values_to = "Mean")

ggplot(mean_data_long, aes(x = CourseCategory, y = Mean, fill = CourseCategory)) +
  geom_bar(stat = "identity") +
  geom_text(aes(label = round(Mean, 2)), vjust = -0.5, size = 3) +  # Add mean values on top of the bars
  facet_wrap(~ Variable, scales = "free_y") +
  scale_y_continuous(limits = c(0, 1)) +
  theme_minimal() +
  labs(title = "Mean Comparison Across Categories for Each Variable", 
       x = "Course Category", 
       y = "Mean Value") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

## mean by device type

```{r, echo=TRUE, results='hide'}
device_data <- data %>%
      group_by(CourseCategory, DeviceType) %>%
      summarise(UserCount = n()) %>%
      ungroup()
    
    # Calculate the percentage of users for each device type within each course category
    device_data <- device_data %>%
      group_by(CourseCategory) %>%
      mutate(Percentage = (UserCount / sum(UserCount)) * 100) %>%
      ungroup()
    
    # Create the faceted bar graph
    ggplot(device_data, aes(x = as.factor(DeviceType), y = Percentage, fill = as.factor(DeviceType))) +
      geom_bar(stat = "identity") +
      geom_text(aes(label = paste0(round(Percentage, 1), "%")), vjust = -0.5, size = 3) +  # Add percentage labels on top of bars
      facet_wrap(~ CourseCategory) +
      scale_y_continuous(limits = c(0, 100), labels = scales::percent_format(scale = 1)) +  # Set y-axis limits between 0 and 100
      theme_minimal() +
      labs(title = "Percentage of Users by Device Type Across Course Categories", 
           x = "Device Type", 
           y = "Percentage of Users") +
      theme(axis.text.x = element_text(angle = 0, hjust = 1)) +
      scale_fill_manual(values = c("0" = "#1f77b4", "1" = "#ff7f0e"), 
                        name = "Device Type",
                        labels = c("Device 0", "Device 1"))
```

## 

##plotting: calculating density to visualise the results

```{r, echo=TRUE, results='hide'}
calculate_density <- function(x, y) {
  dens <- kde2d(x, y, n = 100)
  ix <- findInterval(x, dens$x)
  iy <- findInterval(y, dens$y)
  return(dens$z[cbind(ix, iy)])
}
```

## plotting: time spent on course compare to completaion rate

```{r, echo=TRUE, results='hide'}
# Calculate densities for not completed and completed data
notcompleted1 <- data %>%
  filter(CourseCompletion == '0') %>%
  mutate(density = calculate_density(TimeSpentOnCourse, CompletionRate))

completed1 <- data %>%
  filter(CourseCompletion == '1') %>%
  mutate(density = calculate_density(TimeSpentOnCourse, CompletionRate))


highdensity_combined1 <- bind_rows(
  notcompleted1 %>% mutate(Status = "Not Completed"),
  completed1 %>% mutate(Status = "Completed")
) %>%
  group_by(CourseCategory, Status) %>%
  filter(density >= quantile(density, 0.8)) %>%
  dplyr:: select(CourseCategory, CourseCompletion, TimeSpentOnCourse, CompletionRate, density, Status)


highdensity_combined1



# Plot the most dense areas
density_1 = ggplot(highdensity_combined1, aes(x = TimeSpentOnCourse, y = CompletionRate, color = Status)) +
  geom_point(alpha = 0.6) +
  facet_wrap(~ CourseCategory, ncol = 3) +
  scale_color_manual(values = c("Completed" = "blue", "Not Completed" = "red")) +
  labs(title = "High-Density Areas by Course Category",
       x = "Time Spent on Course",
       y = "Completion Rate",
       color = "Completion Status") +
  theme_minimal()
density_1
```

## plotting: quiz score compare to completion rate

```{r, echo=TRUE, results='hide'}
notcompleted3 <- data %>%
  filter(CourseCompletion == '0') %>%
  mutate(density = calculate_density(QuizScores, CompletionRate))

completed3 <- data %>%
  filter(CourseCompletion == '1') %>%
  mutate(density = calculate_density(QuizScores, CompletionRate))


highdensity_combined3 <- bind_rows(
  notcompleted3 %>% mutate(Status = "Not Completed"),
  completed3 %>% mutate(Status = "Completed")
) %>%
  group_by(CourseCategory, Status) %>%
  filter(density >= quantile(density, 0.8)) %>%
  dplyr:: select(CourseCategory, CourseCompletion, QuizScores, CompletionRate, density, Status)

highdensity_combined3



# Plot the most dense areas
density_3 = ggplot(highdensity_combined3, aes(x = QuizScores, y = CompletionRate, color = Status)) +
  geom_point(alpha = 0.6) +
  facet_wrap(~ CourseCategory, ncol = 3) +
  scale_color_manual(values = c("Completed" = "blue", "Not Completed" = "red")) +
  labs(title = "High-Density Areas by Course Category",
       x = "Quiz scores",
       y = "Completion Rate",
       color = "Completion Status") +
  theme_minimal()
density_3
```

## plotting: Number of quiz taken compare to quiz score

```{r, echo=TRUE, results='hide'}
notcompleted5 <- data %>%
  filter(CourseCompletion == '0') %>%
  mutate(density = calculate_density(NumberOfQuizzesTaken, QuizScores))

completed5 <- data %>%
  filter(CourseCompletion == '1') %>%
  mutate(density = calculate_density(NumberOfQuizzesTaken, QuizScores))


highdensity_combined5 <- bind_rows(
  notcompleted5 %>% mutate(Status = "Not Completed"),
  completed5 %>% mutate(Status = "Completed")
) %>%
  group_by(CourseCategory, Status) %>%
  filter(density >= quantile(density, 0.8)) %>%
  dplyr:: select(CourseCategory, CourseCompletion ,NumberOfQuizzesTaken , QuizScores, density, Status)

highdensity_combined5



# Plot the most dense areas
density_5 = ggplot(highdensity_combined5, aes(x = NumberOfQuizzesTaken, y = QuizScores, color = Status)) +
  geom_point(alpha = 0.6) +
  facet_wrap(~ CourseCategory, ncol = 3) +
  scale_color_manual(values = c("Completed" = "blue", "Not Completed" = "red")) +
  labs(title = "High-Density Areas by Course Category",
       x = "Number Of Quizzes Taken",
       y = "Quizzes Scores",
       color = "Completion Status") +
  theme_minimal() +
  theme(
    panel.spacing = unit(1, "lines"),  # Add space between panels
    panel.border = element_rect(color = "black", fill = NA, size = 1)  # Add border around each panel
  )
density_5
```

## plotting: Time spent on course compare to quiz score

```{r, echo=TRUE, results='hide'}
notcompleted6 <- data %>%
  filter(CourseCompletion == '0') %>%
  mutate(density = calculate_density(TimeSpentOnCourse, QuizScores))

completed6 <- data %>%
  filter(CourseCompletion == '1') %>%
  mutate(density = calculate_density(TimeSpentOnCourse, QuizScores))


highdensity_combined6 <- bind_rows(
  notcompleted6 %>% mutate(Status = "Not Completed"),
  completed6 %>% mutate(Status = "Completed")
) %>%
  group_by(CourseCategory, Status) %>%
  filter(density >= quantile(density, 0.8)) %>%
  dplyr:: select(CourseCategory, CourseCompletion ,TimeSpentOnCourse , QuizScores, density, Status)

highdensity_combined6



# Plot the most dense areas
density_6 = ggplot(highdensity_combined6, aes(x = TimeSpentOnCourse , y = QuizScores, color = Status)) +
  geom_point(alpha = 0.6) +
  facet_wrap(~ CourseCategory, ncol = 3) +
  scale_color_manual(values = c("Completed" = "blue", "Not Completed" = "red")) +
  labs(title = "High-Density Areas by Course Category",
       x = "TimeSpentOnCourse",
       y = "Quizes scores",
       color = "Completion Status") +
  theme_minimal()
density_6
```

## chi test to test the connection between device type and course completion 


```{r, echo=TRUE, results='hide'}
chi_test_results <- data %>%
  group_by(CourseCategory) %>%
  summarise(
    Chi_Square_Test = list(chisq.test(table(DeviceType, CourseCompletion)))
  )

# Display the p-values for each course category
results =chi_test_results %>%
  mutate(p_value = sapply(Chi_Square_Test, function(x) x$p.value)) %>%
  dplyr:: select(CourseCategory, p_value)
results

```

```{r, echo=TRUE, results='hide'}
ggplot(results, aes(x = CourseCategory, y = p_value)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  geom_hline(yintercept = 0.05, color = "red", linetype = "dashed") +  # Red line at 0.05
  geom_text(aes(label = round(p_value, 3)), vjust = 0) +
  theme_minimal() +
  labs(title = "Chi-Square Test p-values by Course Category",
       x = "Course Category",
       y = "p-value") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
##



# Results

## mean by category
**the bar graph shows the percentage of the student that completed the course by their course category.**

in all course category the completing percentage is bellow 50 %, which is low.
the course with the highest percentage is Business and the lowest is Health.

```{r, echo=FALSE}
data_health = data|>
  filter(CourseCategory == 'Health')

data_arts = data |>
  filter(CourseCategory == 'Arts')

data_science <- data %>%
  filter(CourseCategory== 'Science')

data_Programming <- data %>%
  filter(CourseCategory == 'Programming')

data_business <- data %>%
  filter(CourseCategory == 'Business')


calculate_mean_completion <- function(data) {
  mean_completion <- sum(data$CourseCompletion == 1) / 1500
  return(mean_completion)
}

# Calculate mean completion rates for each category
mean_completion_health <- calculate_mean_completion(data_health)
mean_completion_science <- calculate_mean_completion(data_science)
mean_completion_Programming <- calculate_mean_completion(data_Programming)
mean_completion_arts <- calculate_mean_completion(data_arts)
mean_completion_business <- calculate_mean_completion(data_business)

# Create a table with the results
completion_rates <- tibble(
  course = c("Health", "Science", "Programming", "Arts", "Business"),
  completion_rate = c(mean_completion_health, mean_completion_science, mean_completion_Programming, mean_completion_arts, mean_completion_business)
)


completion_rates_per = completion_rates %>%
  mutate(completion_rate = completion_rate * 100)

# Create the bar chart
ggplot(completion_rates_per, aes(x = course, y = completion_rate, fill = course)) +
  geom_bar(stat = 'identity') +
  geom_text(aes(label = round(completion_rate, 1)), vjust = -0.5, size = 3.5) +
  scale_y_continuous(labels = scales::percent_format(scale = 1), limits = c(0, 100)) +
  labs(title = "Mean of Course Completion by Category",
       x = "Course Category",
       y = "completion of course (pass/not pass) (%)") +
  theme_minimal() +
  theme(legend.position = "none")
```

**code, pics, text here** \>\>\>\>\>\>\> 19609bc9b7f76d53fa40bfd18e1666f5365f5327

# Conclusions

**text here**
